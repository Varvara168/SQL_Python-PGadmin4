from sqlalchemy import Column, Integer, String, create_engine
from sqlalchemy.orm import declarative_base, sessionmaker

# –°–æ–∑–¥–∞—ë–º –±–∞–∑—É –¥–ª—è –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π
Base = declarative_base()

# –û–ø–∏—Å—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"
class User(Base):
    __tablename__ = 'users'
    id = Column(Integer, primary_key=True)   # ID ‚Äî –ø–µ—Ä–≤–∏—á–Ω—ã–π –∫–ª—é—á
    name = Column(String)                    # –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    age = Column(Integer)                    # –í–æ–∑—Ä–∞—Å—Ç

# –°–æ–∑–¥–∞—ë–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite
engine = create_engine("sqlite:///users.db")

# –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—É, –µ—Å–ª–∏ –µ—ë –µ—â—ë –Ω–µ—Ç
Base.metadata.create_all(engine)

# –°–æ–∑–¥–∞—ë–º —Å–µ—Å—Å–∏—é –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π
Session = sessionmaker(bind=engine)
session = Session()

# –î–æ–±–∞–≤–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –µ—Å–ª–∏ –±–∞–∑–∞ –ø–æ–∫–∞ –ø—É—Å—Ç–∞—è
if not session.query(User).first():  # –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞—è
    user1 = User(name="–í–∞—Ä–≤–∞—Ä–∞", age=17)
    user2 = User(name="–õ–∏—Å–∞", age=21)
    user3 = User(name="–ï–≤–∞", age=18)
    
    session.add_all([user1, user2, user3])  # –¥–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ—Ö —Å—Ä–∞–∑—É
    session.commit()  # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è

# –í—ã–≤–æ–¥ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
print("\nüìã –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:")
all_users = session.query(User).all()  # –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
for user in all_users:
    print(f"üßç {user.name}, {user.age} –ª–µ—Ç")

# –í—ã–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å—Ç–∞—Ä—à–µ 18
print("\nüîé –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å—Ç–∞—Ä—à–µ 18:")
adult_users = session.query(User).filter(User.age > 18).all()
for user in adult_users:
    print(f"‚úÖ {user.name}, {user.age} –ª–µ—Ç")

# –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–º–µ–Ω–∏
print("\nüîç –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∏–º–µ–Ω–µ–º '–õ–∏—Å–∞':")
found_user = session.query(User).filter(User.name == "–õ–∏—Å–∞").first()
if found_user:
    print(f"üëÅ –ù–∞–π–¥–µ–Ω–∞: {found_user.name}, {found_user.age} –ª–µ—Ç")
else:
    print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞")

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–æ–∑—Ä–∞—Å—Ç–∞ –í–∞—Ä–≤–∞—Ä—ã
print("\n‚úèÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–æ–∑—Ä–∞—Å—Ç–∞ –í–∞—Ä–≤–∞—Ä—ã –¥–æ 18 –ª–µ—Ç:")
user_to_update = session.query(User).filter(User.name == "–í–∞—Ä–≤–∞—Ä–∞").first()
if user_to_update:
    user_to_update.age = 18
    session.commit()
    print("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ")

# –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–º–µ–Ω–∏ "–ï–≤–∞"
print("\nüóë –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–º–µ–Ω–∏ '–ï–≤–∞':")
user_to_delete = session.query(User).filter(User.name == "–ï–≤–∞").first()
if user_to_delete:
    session.delete(user_to_delete)
    session.commit()
    print("‚úÖ –£–¥–∞–ª–µ–Ω–∞")

# –ò—Ç–æ–≥–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
print("\nüìã –ò—Ç–æ–≥–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
final_users = session.query(User).all()
for user in final_users:
    print(f"üë§ {user.name}, {user.age} –ª–µ—Ç")
